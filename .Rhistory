plot(cox.zph(coxph1, transform=rank))
phtest<-cox.zph(coxph1)
phtest
plot(phtest[1])
######################################
# Survival Analysis - Reunification
######################################
ds2<-ds
#Identifying the PLCEnd codes associated with Reunification
ReuniteCode<-c(1572, 8674, 8839, 13045, 13046)
#Creating a new event variable: Reunification; all other placement endings are considered 'censored'
ds2$Reunification<-ifelse(ds2$PLCEnd==0, 0, ifelse(
ds2$PLC_EXITRSN %in% ReuniteCode, 1,0))
table(ds2$Reunification)
table(ds2$PLCEnd, ds2$PLC_EXITRSN, useNA="ifany")
#Creating survival curves for Reunification
survobject2<-Surv(time=ds2$tstart, time2=ds2$tstop, event=ds2$Reunification)
survinfo2<-survfit(survobject2~CC, data=ds2)
survinfo2
plot(survinfo2, col =c("Black", "Blue"), conf.int=TRUE, xlab="Time (Days)", ylab="Proportion Not Reunified", main="Survival Curve - Reunification")
legend(500,1,legend=c("Received CC", "Did Not Recieve Child Care"), col=c("blue", "black"), lty=1, lwd =5)
#Testing significance of Hazard Ratio
coxph2<-coxph(survobject2~CC, ties="breslow", data=ds2)
coxph2
#Testing proportonal hazards assumption
phtest2<-cox.zph(coxph2)
phtest2
plot(phtest2[1])
######################################
# Survival Analysis - Negative Outcome
######################################
ds3<-ds
#Identifying PLCEnd codes associated with negative outcomes
NegativeCode<-c(1561, 1564, 1573,1575,2508,2509,2510,4861,4862,15874, 15946)
#1561:  Child requestion change of placement
#1564:  Death of Child
#1573:  AWOL
#2508:  Placement cannot meet child's behavioral treatment needs
#2509:  Placement cannot meet child's medical treatment needs
#2510:  Placement temporarily unable to care for the child
#4861:  Abuse/Neglect allegations against provider
#4862:  Provider requested change of placement
#15874: Convicted of Crime as an adult
#15946: Convicted of a crime as an adult
#Creating a new event variable: NegEnd
ds3$NegEnd<-ifelse(ds3$PLCEnd==0, 0, ifelse(
ds3$PLC_EXITRSN %in% NegativeCode, 1,0))
table(ds3$PLC_EXITRSN, ds3$PLCEnd, useNA="ifany")
table(ds3$NegEnd, useNA="ifany")
#Creating survival curves
survobject3<-Surv(time=ds3$tstart, time2=ds3$tstop, event=ds3$NegEnd)
survinfo3<-survfit(survobject3~CC, data=ds3)
survinfo3
plot(survinfo3, col=c("Black", "Blue"), conf.int=TRUE, xlab="Time (Days)", ylab="Proportion without Negative Outcome", main="Survival Curve - All Negative Outcomes")
legend(500,1,legend=c("Received CC", "Did Not Recieve Child Care"), col=c("blue", "black"), lty=1, lwd =5)
#Testing significance of hazard ratio
coxph3<-coxph(survobject3~CC, ties="breslow", data=ds3)
coxph3
#Testing proportional hazards assumption
phtest3<-cox.zph(coxph3)
phtest3
plot(phtest3[1])
######################################
# Younger Children: Survival Analysis - Reunification
######################################
ds4<-ds[which(ds$Age_PLC_ENTRY<6),]
#Identifying the PLCEnd codes associated with Reunification
ReuniteCode<-c(1572, 8674, 8839, 13045, 13046)
#Creating a new event variable: Reunification; all other placement endings are considered 'censored'
ds4$Reunification<-ifelse(ds4$PLCEnd==0, 0, ifelse(
ds4$PLC_EXITRSN %in% ReuniteCode, 1,0))
table(ds4$Reunification)
table(ds4$PLCEnd, ds4$PLC_EXITRSN, useNA="ifany")
#Creating survival curves for Reunification
survobject2<-Surv(time=ds4$tstart, time2=ds4$tstop, event=ds4$Reunification)
survinfo2<-survfit(survobject2~CC, data=ds4)
survinfo2
plot(survinfo2, col =c("Black", "Blue"), conf.int=TRUE, xlab="Time (Days)", ylab="Proportion Not Reunified", main="Survival Curve - Reunification")
legend(500,1,legend=c("Received CC", "Did Not Recieve Child Care"), col=c("blue", "black"), lty=1, lwd =5)
#Testing significance of Hazard Ratio
coxph2<-coxph(survobject2~CC, ties="breslow", data=ds4)
coxph2
#Testing proportonal hazards assumption
phtest2<-cox.zph(coxph2)
phtest2
plot(phtest2[1])
######################################
# Survival Analysis - "Disruption event"
######################################
ds5<-ds[which(ds$Age_PLC_ENTRY<6),]
ds6<-ds[which(ds$Age_PLC_EXIT<6),]
colnames(ds)
# #Identifying PLCEnd codes associated with negative outcomes
# DisruptionCode<-c(1561,1562, 1570, 1573, 2508, 2509, 2510, 4861, 4862)
DisruptionCode<-c(1561,1562, 1570, 1573, 2508, 2509, 2510, 4861, 4862, 5008, 5288, 8673, 15874, 45946, 6220, 6221)
#1561:  Child requestion change of placement
#1562:  Court Order
#1570:  Placement Contract Ended
#1573:  AWOL
#2508:  Placement cannot meet child's behavioral treatment needs
#2509:  Placement cannot meet child's medical treatment needs
#2510:  Placement temporarily unable to care for the child
#4861:  Abuse/Neglect allegations against provider
#4862:  Provider requested change of placement
#5008:  Respite
#5288:  Respite ended
#6220:  Returned Involuntarily
#6221:  Returned voluntarily
#8673:  Return to Placement
#15874: Convicted of crime as adult
#15946: Convicted of crime as adult
#Creating a new event variable: Disruption
ds5$Disruption<-ifelse(ds5$PLCEnd==0, 0, ifelse(
ds5$PLC_EXITRSN %in% DisruptionCode, 1,0))
table(ds5$PLCEnd)
table(ds5$PLC_EXITRSN, ds5$PLCEnd, useNA="ifany")
table(ds5$Disruption, useNA="ifany")
#Creating survival curves
survobject3<-Surv(time=ds5$tstart, time2=ds5$tstop, event=ds5$Disruption)
survinfo3<-survfit(survobject3~CC, data=ds5)
survinfo3
plot(survinfo3, col=c("Black", "Blue"), conf.int=TRUE, xlab="Time (Days)", ylab="Proportion without Negative Outcome", main="Survival Curve - All Negative Outcomes")
legend(500,1,legend=c("Received CC", "Did Not Recieve Child Care"), col=c("blue", "black"), lty=1, lwd =5)
table(ds5$CC, useNA="ifany")
#Testing significance of hazard ratio
colnames(ds5)
coxph3<-coxph(survobject3~CC+DiagnosisAny+Age_PLC_ENTRY+CC*Age_PLC_ENTRY, ties="breslow", data=ds5)
coxph3
#Testing proportional hazards assumption
phtest3<-cox.zph(coxph3)
phtest3
plot(phtest3[1])
###########################
#Now looking at those who are less than 6 at time of placement end
#Creating a new event variable: Disruption
ds6$Disruption<-ifelse(ds6$PLCEnd==0, 0, ifelse(
ds6$PLC_EXITRSN %in% DisruptionCode, 1,0))
table(ds6$PLCEnd)
table(ds6$PLC_EXITRSN, ds6$PLCEnd, useNA="ifany")
table(ds6$Disruption, useNA="ifany")
#Creating survival curves
survobject3<-Surv(time=ds6$tstart, time2=ds6$tstop, event=ds6$Disruption)
survinfo3<-survfit(survobject3~CC, data=ds6)
survinfo3
plot(survinfo3, col=c("Black", "Blue"), conf.int=TRUE, xlab="Time (Days)", ylab="Proportion without Negative Outcome", main="Survival Curve - All Negative Outcomes")
legend(500,1,legend=c("Received CC", "Did Not Recieve Child Care"), col=c("blue", "black"), lty=1, lwd =5)
#Testing significance of hazard ratio
coxph3<-coxph(survobject3~CC+DiagnosisAny, ties="breslow", data=ds6)
coxph3
#Testing proportional hazards assumption
phtest3<-cox.zph(coxph3)
phtest3
plot(phtest3[1])
###########################
#Now including other covariates
table(ds6$CL_PRMRYRC, useNA="ifany")
table(ds6$CL_PTRIBALTY, useNA="ifany")
ds6$CL_Asian<-ifelse(ds6$CL_PRMRYRC=="A", 1,0)
ds6$CL_Black<-ifelse(ds6$CL_PRMRYRC=="B", 1,0)
ds6$CL_Indian<-ifelse(ds6$CL_PRMRYRC=="I", 1,0)
ds6$CL_PacificIslander<-ifelse(ds6$CL_PRMRYRC=="P", 1,0)
ds6$CL_Native<-ifelse(ds6$CL_PTRIBALTY==0, 0,1)
table(ds6$CL_I, ds6$CL_PTRIBALTY, useNA="ifany")
head(ds)
survobject3<-Surv(time=ds6$tstart, time2=ds6$tstop, event=ds6$Disruption)
# survinfo3<-survfit(survobject3~CC, data=ds6)
survinfo3<-survfit(survobject3~CC + CL_Asian + CL_Black + CL_Indian + CL_PacificIslander, data=ds6)
survinfo3
plot(survinfo3, col=c("Black", "Blue"), conf.int=TRUE, xlab="Time (Days)", ylab="Proportion without Negative Outcome", main="Survival Curve - All Negative Outcomes")
legend(500,1,legend=c("Received CC", "Did Not Recieve Child Care"), col=c("blue", "black"), lty=1, lwd =5)
#Testing significance of hazard ratio
coxph3<-coxph(survobject3~CC + CL_Asian + CL_Black + CL_Indian + CL_PacificIslander, ties="breslow", data=ds6)
coxph3
#Testing proportional hazards assumption
phtest3<-cox.zph(coxph3)
phtest3
plot(phtest3[1])
###########################
# Creating Tables (Meloy & Phillips 2012b)
###########################
dsTablePrep$AgeGroup<-ifelse(dsTablePrep$Age_PLC_ENTRY < 3, "Infant/Toddler", ifelse(
dsTablePrep$Age_PLC_ENTRY < 6, "Preschooler", "Older"))
table(dsTablePrep$AgeGroup, useNA="ifany")
dsTablePrep<-dsTablePrep[which(dsTablePrep$AgeGroup!="Older"),]
table(dsTablePrep$CL_PRMRYRC, useNA="ifany")
table(dsTablePrep$CL_PTRIBALTY, useNA="ifany")
dsTablePrep$CL_Asian<-ifelse(dsTablePrep$CL_PRMRYRC=="A", 1,0)
dsTablePrep$CL_Black<-ifelse(dsTablePrep$CL_PRMRYRC=="B", 1,0)
dsTablePrep$CL_Indian<-ifelse(dsTablePrep$CL_PRMRYRC=="I", 1,0)
dsTablePrep$CL_PacificIslander<-ifelse(dsTablePrep$CL_PRMRYRC=="P", 1,0)
dsTablePrep$CL_Native<-ifelse(dsTablePrep$CL_PTRIBALTY==0, 0,1)
table(dsTablePrep$CL_HISPANIC)
dsTablePrep$CL_HISPANIC2<-ifelse(dsTablePrep$CL_HISPANIC=="Y", 1,0)
table(dsTablePrep$CL_HISPANIC2)
#Table 1
#Row1
mean(dsTablePrep[which(dsTablePrep$AgeGroup=="Preschooler"),]$Age_PLC_ENTRY)
sd(dsTablePrep[which(dsTablePrep$AgeGroup=="Preschooler"),]$Age_PLC_ENTRY)
mean(dsTablePrep[which(dsTablePrep$AgeGroup=="Infant/Toddler"),]$Age_PLC_ENTRY)
sd(dsTablePrep[which(dsTablePrep$AgeGroup=="Infant/Toddler"),]$Age_PLC_ENTRY)
mean(dsTablePrep[which(dsTablePrep$AgeGroup!="Older"),]$Age_PLC_ENTRY)
sd(dsTablePrep[which(dsTablePrep$AgeGroup!="Older"),]$Age_PLC_ENTRY)
#Row2
mean(dsTablePrep[which(dsTablePrep$AgeGroup=="Preschooler"),]$PLC_EXIT_DT_diff)
sd(dsTablePrep[which(dsTablePrep$AgeGroup=="Preschooler"),]$PLC_EXIT_DT_diff)
mean(dsTablePrep[which(dsTablePrep$AgeGroup=="Infant/Toddler"),]$PLC_EXIT_DT_diff)
sd(dsTablePrep[which(dsTablePrep$AgeGroup=="Infant/Toddler"),]$PLC_EXIT_DT_diff)
mean(dsTablePrep$PLC_EXIT_DT_diff)
sd(dsTablePrep$PLC_EXIT_DT_diff)
#Row 3
# 1566: Gaurdianship - Relative
# 1571: Placement with Relative
# 2511: Placement with siblings / proximity to family
# 7093: Custody to Relative
kincode<-c(1566, 1571, 251, 7093)
dsTablePrep$EverkinCare<-ifelse(dsTablePrep$PLC_EXITRSN %in% kincode, 1,0)
table(dsTablePrep$EverkinCare, dsTablePrep$AgeGroup, useNA="ifany")
#Row4
DisruptionCode<-c(1561,1562, 1570, 1573, 2508, 2509, 2510, 4861, 4862, 5008, 5288, 8673, 15874, 45946, 6220, 6221)
dsTablePrep$Disruption<-ifelse(dsTablePrep$PLC_EXITRSN %in% DisruptionCode, 1,0)
nrow(dsTablePrep[which(dsTablePrep$AgeGroup=="Infant/Toddler"),])
14611+2885
table(dsTablePrep$Disruption, dsTablePrep$AgeGroup, useNA="ifany")
table(dsTablePrep$AgeGroup, useNA="ifany")
table(dsTablePrep$Disruption)/nrow(dsTablePrep[which(dsTablePrep$AgeGroup=="Infant/Toddler"),])
dsTable1Prep_InfTod<-dsTablePrep[which(dsTablePrep$AgeGroup=="Infant/Toddler"),]
nrow(dsTable1Prep_InfTod)
table(dsTable1Prep_InfTod$Disruption)
table(dsTable1Prep_InfTod$Disruption)/nrow(dsTable1Prep_InfTod)
dsTable1Prep_Presch<-dsTablePrep[which(dsTablePrep$AgeGroup=="Preschooler"),]
nrow(dsTable1Prep_Presch)
table(dsTable1Prep_Presch$Disruption)
table(dsTable1Prep_Presch$Disruption)/nrow(dsTable1Prep_Presch)
nrow(dsTablePrep)
table(dsTablePrep$Disruption)
table(dsTablePrep$Disruption)/nrow(dsTablePrep)
#Row5
colnames(dsTablePrep)
head(dsTablePrep)
sum(!is.na(dsTablePrep$TBegin_1))
sum(is.na(dsTablePrep$TBegin_1))
table(!is.na(dsTablePrep$TBegin_1),dsTablePrep$AgeGroup, useNA="ifany")
11190/(11190+6306)
4832/(4832+3622)
table(!is.na(dsTablePrep$TBegin_1), useNA="ifany")
16022/(16022+9928)
#Row 6
ds$AgeGroup<-ifelse(ds$Age_PLC_ENTRY < 3, "Infant/Toddler", ifelse(
ds$Age_PLC_ENTRY < 6, "Preschooler", "Older"))
table(dsTable1Prep_Presch$AgeGroup, useNA="ifany")
ds$AgeGroup<-ifelse(ds$Age_PLC_ENTRY < 3, "Infant/Toddler", ifelse(
ds$Age_PLC_ENTRY < 6, "Preschooler", "Older"))
table(ds$AgeGroup, useNA="ifany")
ds$CCDuration<-NA
ds$CCDuration<-ifelse(ds$CC==0, NA, ds$tstop-ds$tstart)
summary(ds[which(ds$AgeGroup=="Infant/Toddler"),]$CCDuration)
summary(ds[which(ds$AgeGroup=="Preschooler"),]$CCDuration)
summary(ds[which(ds$AgeGroup!="Older"),]$CCDuration)
table(Table2Prep$AgeGroup, useNA="ifany")
#Next few rows are going to be a pain, so I'll come back to them later.
#Table2
#Weird findings. Doublecheck.
CCClientId<-ds[which(ds$CC==1),]$RM_CLID
table(Table2Prep$Male, Table2Prep$AgeGroup, useNA="ifany")
Table2Prep<-dsTablePrep[which(dsTablePrep$AgeGroup !="Older"),]
Table2Prep$CCClient<-ifelse(Table2Prep$RM_CLID %in% CCClientId, 1,0)
table(Table2Prep$CCClient)
table(Table2Prep$DiagnosisAny, useNA="ifany")
Table2Log<-glm(CCClient~Age_PLC_ENTRY+CL_Black+CL_HISPANIC2+Male+DiagnosisAny, data=Table2Prep)
Table2LogOR<-exp(Table2Log$coefficients)
Table2Log
Table2LogOR
Table2Log$coefficients
Table2Log$residuals
#Table3
#Creating a new event variable: Disruption
dsTable3<-ds[which(ds$AgeGroup!="Older"),]
table(dsTable3$CL_PRMRYRC, useNA="ifany")
dsTable3$CL_Asian<-ifelse(dsTable3$CL_PRMRYRC=="A", 1,0)
dsTable3$CL_Black<-ifelse(dsTable3$CL_PRMRYRC=="B", 1,0)
dsTable3$CL_Indian<-ifelse(dsTable3$CL_PRMRYRC=="I", 1,0)
dsTable3$CL_PacificIslander<-ifelse(dsTable3$CL_PRMRYRC=="P", 1,0)
dsTable3$CL_Native<-ifelse(dsTable3$CL_PTRIBALTY==0, 0,1)
table(dsTable3$CL_HISPANIC)
dsTable3$CL_HISPANIC2<-ifelse(dsTable3$CL_HISPANIC=="Y", 1,0)
table(dsTable3$CL_HISPANIC2)
dsTable3$Disruption<-ifelse(dsTable3$PLCEnd==0, 0, ifelse(
dsTable3$PLC_EXITRSN %in% DisruptionCode, 1,0))
table(dsTable3$PLCEnd)
table(dsTable3$PLC_EXITRSN, dsTable3$PLCEnd, useNA="ifany")
table(dsTable3$Disruption, useNA="ifany")
colnames(dsTable3)
dsTable3$EverkinCare<-ifelse(dsTable3$PLC_EXITRSN %in% kincode, 1,0)
#Creating a new event variable: Disruption
dsTable3$Disruption<-ifelse(dsTable3$PLCEnd==0, 0, ifelse(
dsTable3$PLC_EXITRSN %in% DisruptionCode, 1,0))
#######################Infants and Toddlers and Preschoolers
survobject3_1_1<-Surv(time=dsTable3$tstart, time2=dsTable3$tstop, event=dsTable3$Disruption)
coxph3_1_1<-coxph(survobject3_1_1~CC, ties="breslow", data=dsTable3)
coxph3_1_1
phtest3_1_1<-cox.zph(coxph3_1_1)
phtest3_1_1
survinfo3_1_1<-survfit(survobject3_1_1~dsTable3$CC)
#Plot 1
plot(survinfo3_1_1, col=c("Black", "Blue"), conf.int=TRUE, xlab="Time (Days)", ylab="Proportion Survived", main="Survival Curve")
coxph3_1_2<-coxph(survobject3_1_1~CC+Age_PLC_ENTRY, ties="breslow", data=dsTable3)
coxph3_1_2
phtest3_1_2<-cox.zph(coxph3_1_2)
phtest3_1_2
table(dsTable3$CC, dsTable3$Male, useNA="ifany")
coxph3_1_3<-coxph(survobject3_1_1~CC+Age_PLC_ENTRY+Male+CL_Black+CL_HISPANIC2+DiagnosisAny, ties="breslow", data=dsTable3)
coxph3_1_3
phtest3_1_3<-cox.zph(coxph3_1_3)
phtest3_1_3
#######################Infants and Toddlers
dsTable3_InfTod<-dsTable3[which(dsTable3$AgeGroup=="Infant/Toddler"),]
survobject3_2<-Surv(time=dsTable3_InfTod$tstart, time2=dsTable3_InfTod$tstop, event=dsTable3_InfTod$Disruption)
coxph3_2_1<-coxph(survobject3_2~CC, ties="breslow", data=dsTable3_InfTod)
coxph3_2_1
phtest3_2_1<-cox.zph(coxph3_2_1)
phtest3_2_1
coxph3_2_2<-coxph(survobject3_2~CC+Age_PLC_ENTRY, ties="breslow", data=dsTable3_InfTod)
coxph3_2_2
phtest3_2_2<-cox.zph(coxph3_2_2)
phtest3_2_2
coxph3_2_3<-coxph(survobject3_2~CC+Age_PLC_ENTRY+Male+CL_Black+CL_HISPANIC2+DiagnosisAny, ties="breslow", data=dsTable3_InfTod)
coxph3_2_3
phtest3_2_3<-cox.zph(coxph3_2_3)
phtest3_2_3
#######################Preschoolers
dsTable3_Presc<-dsTable3[which(dsTable3$AgeGroup=="Preschooler"),]
survobject3_3<-Surv(time=dsTable3_Presc$tstart, time2=dsTable3_Presc$tstop, event=dsTable3_Presc$Disruption)
coxph3_3_1<-coxph(survobject3_3~CC, ties="breslow", data=dsTable3_Presc)
coxph3_3_1
phtest3_3_1<-cox.zph(coxph3_3_1)
phtest3_3_1
survinfo3_3_1<-survfit(survobject3_3~dsTable3_Presc$CC)
plot(survinfo3_3_1, col=c("Black", "Blue"), conf.int=TRUE, xlab="Time (Days)", ylab="Proportion Survived", main="Survival Curve")
coxph3_3_2<-coxph(survobject3_3~CC+Age_PLC_ENTRY, ties="breslow", data=dsTable3_Presc)
coxph3_3_2
phtest3_3_2<-cox.zph(coxph3_3_2)
phtest3_3_2
coxph3_3_3<-coxph(survobject3_3~CC+Age_PLC_ENTRY+Male+CL_Black+CL_HISPANIC2+DiagnosisAny, ties="breslow", data=dsTable3_Presc)
coxph3_3_3
phtest3_3_3<-cox.zph(coxph3_3_3)
phtest3_3_3
table(dsTablePrep$Male, useNA="ifany")
16579+16204
library(lavaan)
fig8.4c <- "#regressions
Y ~ 1*B + 1*X + 1*U1
B ~ 1*A
X ~ 1*A + 1*U1
#variances and residuals
Y ~~ 1*Y
B ~~ 1*B
A ~~ 1*A
X ~~ 1*X
U1 ~~ 1*U1
#Intercepts and means
Y ~ 0
B ~ 0
A ~ 0
X ~ 0
U1 ~ 0"
# generate data
set.seed(1234)
myData <- simulateData(fig8.4c, sample.nobs=1000L)
# fit model
myModel <- '#regressions
Y ~ B + X + U1
B ~ A
X ~ A + U1
#variances and residuals
Y ~~ Y
B ~~ B
#A ~~ A
X ~~ X
#U1 ~~ U1
#Intercepts and means
Y ~ 1
B ~ 1
#A ~ 1
X ~ 1
#U1 ~ 1
'
fit <- sem(myModel, data=myData)#, fixed.x=FALSE)
summary(fit)
myData <- simulateData(fig8.4c, sample.nobs=1000L)
fit <- sem(myModel, data=myData)#, fixed.x=FALSE)
summary(fit)
######################################
# Setting up
######################################
rm(list=ls())
setwd("C:/Users/APETERS4/Documents/GitHub/OUHCS-Methods-Practice")
######################################
# Previous examples
######################################
#Play with DAGGITY Package
#LAVAAN
library(lavaan)
fig8.4c <- "#regressions
Y ~ 1*B + 1*X + 1*U1
B ~ 1*A
X ~ 1*A + 1*U1
#variances and residuals
Y ~~ 1*Y
B ~~ 1*B
A ~~ 1*A
X ~~ 1*X
U1 ~~ 1*U1
#Intercepts and means
Y ~ 0
B ~ 0
A ~ 0
X ~ 0
U1 ~ 0"
# generate data
set.seed(1234)
myData <- simulateData(fig8.4c, sample.nobs=1000L)
# fit model
myModel <- '#regressions
Y ~ B + X + U1
B ~ A
X ~ A + U1
#variances and residuals
Y ~~ Y
B ~~ B
#A ~~ A
X ~~ X
#U1 ~~ U1
#Intercepts and means
Y ~ 1
B ~ 1
#A ~ 1
X ~ 1
#U1 ~ 1
'
fit <- sem(myModel, data=myData)#, fixed.x=FALSE)
summary(fit)
######################################
# Setting up
######################################
rm(list=ls())
setwd("C:/Users/APETERS4/Documents/GitHub/OUHCS-Methods-Training")
######################################
# Setting up
######################################
rm(list=ls())
setwd("C:/Users/APETERS4/Documents/GitHub/OUHSC-Methods-Training")
######################################
# Setting up
######################################
rm(list=ls())
setwd("C:/Users/APETERS4/Documents/GitHub/OUHSC-Methods-Training")
library(dagR)
fig8.3b <- "#regressions
Y3 ~ 1*Y1 + 1*Y2
Y1 ~ 1*X1 + 1*U2 + 1*U3
Y2 ~ 1*X2 + 1*U3
X1 ~ 1*U1 + 1*U2
X2 ~ 1*U1
#variances and residuals
Y1 ~~ 1*Y1
Y2 ~~ 1*Y2
Y3 ~~ 1*Y3
X1 ~~ 1*X1
X2 ~~ 1*X2
U1 ~~ 1*U1
U2 ~~ 1*U2
U3 ~~ 1*U3
#Intercepts and means
Y1 ~ 0
Y2 ~ 0
Y3 ~ 0
X1 ~ 0
X2 ~ 0
U1 ~ 0
U2 ~ 0
U3 ~ 0"
set.seed(1234)
myData <- simulateData(fig8.3b, sample.nobs=1000L)
head(myData)
#fit model
testModel<-"#regressions
Y3 ~ Y1 + Y2
Y1 ~ X1 + U2 + U3
Y2 ~ X2 + U3
X1 ~ U1 + U2
X2 ~ U1
#variances and residuals
Y1 ~~ Y1
Y2 ~~ Y2
Y3 ~~ Y3
# X1 ~~ X1
# X2 ~~ X2
# U1 ~~ U1
# U2 ~~ U2
# U3 ~~ U3
#Intercepts and means
Y1 ~ 0
Y2 ~ 0
Y3 ~ 0
# X1 ~ 0
# X2 ~ 0
# U1 ~ 0
# U2 ~ 0
# U3 ~ 0
"
fit<-sem(testModel, data=myData)
summary(fit)
